{% extends "layouts/base.njk" %}

{% from "govuk/components/phase-banner/macro.njk" import govukPhaseBanner %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{# {% from "hmlr/components/footer/macro.njk" import hmlrFooter %} #}
{% from "./macros/hmlr/footer/macro.njk" import hmlrFooter %}

{% block head %}
{{super()}}
<script src="/assets/script.js"></script>
{%- if versioned -%}
<script>
    function setVersion() {
        let version = document.getElementById('version').value;
        console.log("location:", window.location.href)
        if (!window.location.href.includes(version + '/')) {
            console.log(`Versions were different, navigating to ${version}`)
            if (window.location.href.match(/\/[0-9.]+\//))
                window.location.href = window.location.href.replace(/\/[0-9.]+\//, `/${version}/`)
            else
                window.location.href = `./${version}`
        } else {
            console.log(`Version has not changed`);
        }
    }
    document.addEventListener("DOMContentLoaded", () => {
        setVersion()
    });
</script>
{%- endif -%}
{%- if spy -%}
<script>
    let navigations = {}

    function setNavSelect(target) {
        let navLinks = document.querySelector(".x-govuk-sub-navigation").querySelectorAll("a");
        navLinks.forEach(el => {
            el.parentElement.classList.remove("x-govuk-sub-navigation__section-item--current")
            el.setAttribute("aria-current", false);
        })
        target.parentElement.classList.add("x-govuk-sub-navigation__section-item--current")
        target.setAttribute("aria-current", true)
    }

    function updateNavigation() {
        if (navigations.length == 0) return;

        let max = null;
        for (summary of Object.values(navigations)) {
            if (max == null || summary.ratio > max.ratio) {
                max = summary
            }
            console.log(max.ratio, ">", summary.ratio)
        }
        navigations = {}
        max && setNavSelect(max.link)
    }

    function createThresholds(step) {
        let thresholds = []
        for (let i = 0.0; i <= 1.0; i += step) 
            thresholds.push(i)
    }
    function setupScrollSpy() {
        const options = {
            root: null,
            rootMargin: "0px",
            threshold: createThresholds(0.01)
        };

        document.querySelector(".x-govuk-sub-navigation")
            .querySelectorAll("a")
            .forEach(link => {
                let id = link.href.substring(link.href.lastIndexOf('#')+1);
                let observer = new IntersectionObserver((entries, obz) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting)
                        navigations[link.href] = {
                            link: link,
                            ratio: entry.intersectionRatio
                        }
                    })
                }, options);
                let observed = document.getElementById(id);
                if (observed.parentNode.tagName === "SECTION") {
                    observed = observed.parentNode;
                }
                observer.observe(observed);
            })
    }
    document.addEventListener("DOMContentLoaded", () => {
        setupScrollSpy()
        setInterval(updateNavigation)
    });
</script>
{%- endif -%}
{% endblock %}

{% block beforeContent %}
  {{ govukPhaseBanner({
      tag: {
        text: "Prototype",
        classes: "govuk-tag--pink"
      },
      html: 'This is a prototype of a new design for the Business Gateway developer pack. You might experience problems.'
  }) }}
  {%- if not noback -%}
  {{ govukBackLink({
    text: "Back",
    href: "javascript:window.history.back()"
  }) }}
  {%- endif -%}
{% endblock %}

{% block content %}

{%- if sidenav -%}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third sticky">
        {{ xGovukSubNavigation({ items: sidenav}) }}
    </div>
    <div class="govuk-grid-column-two-thirds">
{%- endif -%}

{%- if not noheader -%}
{{ appDocumentHeader({
  title: title,
  description: description
}) }}
{%- endif -%}

{{ appProseScope(content) if content }}
{%- if not content -%}
  <p>You need to add content</p>
{%- endif -%}

{% include "layouts/shared/related.njk" %}

{%- if sidenav -%}
</div></div>
{%- endif -%}

{% endblock %}

{% block footer %}
{{ hmlrFooter({
  meta: {
    visuallyHiddenTitle: "These links open in a new tab.",
    text: "These links open in a new tab.",
    items: [{
      text: "Terms and conditions",
      href: ""
    }, {
      text: "Accessibility Statement",
      href: ""
    }, {
      text: "Cookies",
      href: ""
    }, {
      text: "Freedom of information",
      href: ""
    }]
  },
  copyright: {
    text: "&copy; Crown copyright"
  }
}) }}
{% endblock %}